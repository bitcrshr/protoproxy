// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: protoproxypb/options.proto

package protoproxypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, instructs ProtoProxy to encode/decode all fields and enum values
	// in this file in the given text case.
	//
	// Can be overridden at lower scopes.
	TextCase      TextCase `protobuf:"varint,1,opt,name=text_case,json=textCase,proto3,enum=protoproxy.TextCase" json:"text_case,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{0}
}

func (x *FileOptions) GetTextCase() TextCase {
	if x != nil {
		return x.TextCase
	}
	return TextCase_TEXT_CASE_UNSPECIFIED
}

type MessageOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, instructs ProtoProxy to encode/decode all fields in this
	// message in the given text case.
	//
	// Can be overridden at lower scopes.
	TextCase      TextCase `protobuf:"varint,1,opt,name=text_case,json=textCase,proto3,enum=protoproxy.TextCase" json:"text_case,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{1}
}

func (x *MessageOptions) GetTextCase() TextCase {
	if x != nil {
		return x.TextCase
	}
	return TextCase_TEXT_CASE_UNSPECIFIED
}

type FieldOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, instructs ProtoProxy to encode/decode this field as an
	// anonymous value. In other words, denotes that the field's name is
	// only useful for the gRPC service, and will not be considered when
	// translating HTTP requests/responses.
	//
	// Must be the only field in the message, otherwise an error will be thrown
	// by protoc-gen-protoproxy.
	//
	// Example:
	//
	// ```proto
	//
	//	message Foo {
	//	  repeated string bar = 1 [(protoproxy.opt.flatten) = true];
	//	}
	//
	// ```
	//
	// Will be encoded in JSON as:
	//
	// ```json
	// ["a", "b", "c", "d"]
	// ```
	Flatten bool `protobuf:"varint,1,opt,name=flatten,proto3" json:"flatten,omitempty"`
	// If set, instructs ProtoProxy to encode/decode this field as the given
	// string.
	//
	// Takes precedence over `text_case` if set on the same field.
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// If set, instructs ProtoProxy to encode/decode this field in the given
	// text case.
	TextCase TextCase `protobuf:"varint,3,opt,name=text_case,json=textCase,proto3,enum=protoproxy.TextCase" json:"text_case,omitempty"`
	// If true, instructs ProtoProxy to encode/decode this field as an HTTP header.
	AsHeader bool `protobuf:"varint,4,opt,name=as_header,json=asHeader,proto3" json:"as_header,omitempty"`
	// If true, instructs ProtoProxy to encode this field as a path parameter
	// in the request URL. Has no effect on responses.
	//
	// Note that this is unnec
	AsPathParameter bool `protobuf:"varint,5,opt,name=as_path_parameter,json=asPathParameter,proto3" json:"as_path_parameter,omitempty"`
	// If true, instructs ProtoProxy to encode this field as a query parameter
	// in the request URL. Has no effect on responses.
	AsQueryParameter bool `protobuf:"varint,6,opt,name=as_query_parameter,json=asQueryParameter,proto3" json:"as_query_parameter,omitempty"`
	// If true, instructs ProtoProxy to not encode/decode this field in the HTTP body.
	OmitFromBody  bool `protobuf:"varint,7,opt,name=omit_from_body,json=omitFromBody,proto3" json:"omit_from_body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{2}
}

func (x *FieldOptions) GetFlatten() bool {
	if x != nil {
		return x.Flatten
	}
	return false
}

func (x *FieldOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldOptions) GetTextCase() TextCase {
	if x != nil {
		return x.TextCase
	}
	return TextCase_TEXT_CASE_UNSPECIFIED
}

func (x *FieldOptions) GetAsHeader() bool {
	if x != nil {
		return x.AsHeader
	}
	return false
}

func (x *FieldOptions) GetAsPathParameter() bool {
	if x != nil {
		return x.AsPathParameter
	}
	return false
}

func (x *FieldOptions) GetAsQueryParameter() bool {
	if x != nil {
		return x.AsQueryParameter
	}
	return false
}

func (x *FieldOptions) GetOmitFromBody() bool {
	if x != nil {
		return x.OmitFromBody
	}
	return false
}

type OneofOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OneofOptions) Reset() {
	*x = OneofOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneofOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofOptions) ProtoMessage() {}

func (x *OneofOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofOptions.ProtoReflect.Descriptor instead.
func (*OneofOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{3}
}

type EnumOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, instructs ProtoProxy to encode/decode all values in the given
	// text case.
	//
	// Can be overridden at lower scopes.
	TextCase      TextCase `protobuf:"varint,1,opt,name=text_case,json=textCase,proto3,enum=protoproxy.TextCase" json:"text_case,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumOptions) Reset() {
	*x = EnumOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumOptions) ProtoMessage() {}

func (x *EnumOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumOptions.ProtoReflect.Descriptor instead.
func (*EnumOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{4}
}

func (x *EnumOptions) GetTextCase() TextCase {
	if x != nil {
		return x.TextCase
	}
	return TextCase_TEXT_CASE_UNSPECIFIED
}

type EnumValueOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, instructs ProtoProxy to encode/decode this enum value in the given
	// text case.
	TextCase TextCase `protobuf:"varint,1,opt,name=text_case,json=textCase,proto3,enum=protoproxy.TextCase" json:"text_case,omitempty"`
	// If set, instructs ProtoProxy to encode/decode this enum value as the given
	// string.
	//
	// Takes precedence over `text_case` if set on the same field.
	Name          *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumValueOptions) Reset() {
	*x = EnumValueOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumValueOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueOptions) ProtoMessage() {}

func (x *EnumValueOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueOptions.ProtoReflect.Descriptor instead.
func (*EnumValueOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{5}
}

func (x *EnumValueOptions) GetTextCase() TextCase {
	if x != nil {
		return x.TextCase
	}
	return TextCase_TEXT_CASE_UNSPECIFIED
}

func (x *EnumValueOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ServiceOptions struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Scheme Scheme                 `protobuf:"varint,1,opt,name=scheme,proto3,enum=protoproxy.Scheme" json:"scheme,omitempty"`
	Domain string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// If set, instructs ProtoProxy to forward these headers from the gRPC metadata
	// as headers in the HTTP request.
	//
	// Applies to all methods in the service, unless overridden at the method level.
	ForwardedRequestHeaders []string `protobuf:"bytes,3,rep,name=forwarded_request_headers,json=forwardedRequestHeaders,proto3" json:"forwarded_request_headers,omitempty"`
	// If set, instructs ProtoProxy to forward these headers from the HTTP response
	// as metadata in the gRPC response.
	//
	// Applies to all methods in the service, unless overridden at the method level.
	ForwardedResponseHeaders []string `protobuf:"bytes,4,rep,name=forwarded_response_headers,json=forwardedResponseHeaders,proto3" json:"forwarded_response_headers,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ServiceOptions) Reset() {
	*x = ServiceOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOptions) ProtoMessage() {}

func (x *ServiceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOptions.ProtoReflect.Descriptor instead.
func (*ServiceOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceOptions) GetScheme() Scheme {
	if x != nil {
		return x.Scheme
	}
	return Scheme_SCHEME_UNSPECIFIED
}

func (x *ServiceOptions) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ServiceOptions) GetForwardedRequestHeaders() []string {
	if x != nil {
		return x.ForwardedRequestHeaders
	}
	return nil
}

func (x *ServiceOptions) GetForwardedResponseHeaders() []string {
	if x != nil {
		return x.ForwardedResponseHeaders
	}
	return nil
}

type MethodOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, instructs ProtoProxy to convert each given HTTP status code to
	// the given gRPC status code.
	//
	// Default behavior is:
	//
	// 2xx -> OK
	// 4xx -> INVALID_ARGUMENT
	// 5xx -> INTERNAL
	StatusMappings []*StatusMapping `protobuf:"bytes,1,rep,name=status_mappings,json=statusMappings,proto3" json:"status_mappings,omitempty"`
	// If set, instructs ProtoProxy to use the given encoding to marshal the request.
	//
	// Leaving unset or setting to `ENCODING_UNSPECIFIED` is equivalent to setting
	// to `JSON`.
	RequestEncoding Encoding `protobuf:"varint,2,opt,name=request_encoding,json=requestEncoding,proto3,enum=protoproxy.Encoding" json:"request_encoding,omitempty"`
	// If set, instructs ProtoProxy to use the given encoding to unmarshal the response.
	//
	// Leaving unset or setting to `ENCODING_UNSPECIFIED` is equivalent to setting
	// to `JSON`.
	ResponseEncoding Encoding `protobuf:"varint,3,opt,name=response_encoding,json=responseEncoding,proto3,enum=protoproxy.Encoding" json:"response_encoding,omitempty"`
	// If set, instructs ProtoProxy to forward these headers from the gRPC metadata
	// as headers in the HTTP request. Overrides the `forwarded_request_headers` service
	// option.
	ForwardedRequestHeaders []string `protobuf:"bytes,4,rep,name=forwarded_request_headers,json=forwardedRequestHeaders,proto3" json:"forwarded_request_headers,omitempty"`
	// If set, instructs ProtoProxy to forward these headers from the HTTP response
	// as metadata in the gRPC response. Overrides the `forwarded_response_headers` service
	// option.
	ForwardedResponseHeaders []string `protobuf:"bytes,5,rep,name=forwarded_response_headers,json=forwardedResponseHeaders,proto3" json:"forwarded_response_headers,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *MethodOptions) Reset() {
	*x = MethodOptions{}
	mi := &file_protoproxypb_options_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MethodOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodOptions) ProtoMessage() {}

func (x *MethodOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protoproxypb_options_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodOptions.ProtoReflect.Descriptor instead.
func (*MethodOptions) Descriptor() ([]byte, []int) {
	return file_protoproxypb_options_proto_rawDescGZIP(), []int{7}
}

func (x *MethodOptions) GetStatusMappings() []*StatusMapping {
	if x != nil {
		return x.StatusMappings
	}
	return nil
}

func (x *MethodOptions) GetRequestEncoding() Encoding {
	if x != nil {
		return x.RequestEncoding
	}
	return Encoding_ENCODING_UNSPECIFIED
}

func (x *MethodOptions) GetResponseEncoding() Encoding {
	if x != nil {
		return x.ResponseEncoding
	}
	return Encoding_ENCODING_UNSPECIFIED
}

func (x *MethodOptions) GetForwardedRequestHeaders() []string {
	if x != nil {
		return x.ForwardedRequestHeaders
	}
	return nil
}

func (x *MethodOptions) GetForwardedResponseHeaders() []string {
	if x != nil {
		return x.ForwardedResponseHeaders
	}
	return nil
}

var file_protoproxypb_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.file",
		Tag:           "bytes,50000,opt,name=file",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.message",
		Tag:           "bytes,50000,opt,name=message",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.field",
		Tag:           "bytes,50000,opt,name=field",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*OneofOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.oneof",
		Tag:           "bytes,50000,opt,name=oneof",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.enum",
		Tag:           "bytes,50000,opt,name=enum",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumValueOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.enum_value",
		Tag:           "bytes,50000,opt,name=enum_value",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*ServiceOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.service",
		Tag:           "bytes,50000,opt,name=service",
		Filename:      "protoproxypb/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodOptions)(nil),
		Field:         50000,
		Name:          "protoproxy.method",
		Tag:           "bytes,50000,opt,name=method",
		Filename:      "protoproxypb/options.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional protoproxy.FileOptions file = 50000;
	E_File = &file_protoproxypb_options_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional protoproxy.MessageOptions message = 50000;
	E_Message = &file_protoproxypb_options_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional protoproxy.FieldOptions field = 50000;
	E_Field = &file_protoproxypb_options_proto_extTypes[2]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// optional protoproxy.OneofOptions oneof = 50000;
	E_Oneof = &file_protoproxypb_options_proto_extTypes[3]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional protoproxy.EnumOptions enum = 50000;
	E_Enum = &file_protoproxypb_options_proto_extTypes[4]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional protoproxy.EnumValueOptions enum_value = 50000;
	E_EnumValue = &file_protoproxypb_options_proto_extTypes[5]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional protoproxy.ServiceOptions service = 50000;
	E_Service = &file_protoproxypb_options_proto_extTypes[6]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional protoproxy.MethodOptions method = 50000;
	E_Method = &file_protoproxypb_options_proto_extTypes[7]
)

var File_protoproxypb_options_proto protoreflect.FileDescriptor

var file_protoproxypb_options_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x62, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x08, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x61, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x43, 0x61, 0x73, 0x65, 0x22, 0x9a, 0x02, 0x0a,
	0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x31, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x73, 0x50,
	0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6d,
	0x69, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6f, 0x6d, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x64, 0x79,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x0b, 0x45, 0x6e, 0x75,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x43, 0x61, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x10, 0x45,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x31, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x19, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x11,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x3a, 0x0a, 0x19, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x17, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x18, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x3a, 0x4b, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x57, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a,
	0x4f, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x3a, 0x4f, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65, 0x6f,
	0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x3a, 0x4b, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x3a, 0x60,
	0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x57, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x53, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x99,
	0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x42, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69,
	0x74, 0x63, 0x72, 0x73, 0x68, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0xca, 0x02, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0xe2, 0x02, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_protoproxypb_options_proto_rawDescOnce sync.Once
	file_protoproxypb_options_proto_rawDescData []byte
)

func file_protoproxypb_options_proto_rawDescGZIP() []byte {
	file_protoproxypb_options_proto_rawDescOnce.Do(func() {
		file_protoproxypb_options_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protoproxypb_options_proto_rawDesc), len(file_protoproxypb_options_proto_rawDesc)))
	})
	return file_protoproxypb_options_proto_rawDescData
}

var file_protoproxypb_options_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protoproxypb_options_proto_goTypes = []any{
	(*FileOptions)(nil),                   // 0: protoproxy.FileOptions
	(*MessageOptions)(nil),                // 1: protoproxy.MessageOptions
	(*FieldOptions)(nil),                  // 2: protoproxy.FieldOptions
	(*OneofOptions)(nil),                  // 3: protoproxy.OneofOptions
	(*EnumOptions)(nil),                   // 4: protoproxy.EnumOptions
	(*EnumValueOptions)(nil),              // 5: protoproxy.EnumValueOptions
	(*ServiceOptions)(nil),                // 6: protoproxy.ServiceOptions
	(*MethodOptions)(nil),                 // 7: protoproxy.MethodOptions
	(TextCase)(0),                         // 8: protoproxy.TextCase
	(Scheme)(0),                           // 9: protoproxy.Scheme
	(*StatusMapping)(nil),                 // 10: protoproxy.StatusMapping
	(Encoding)(0),                         // 11: protoproxy.Encoding
	(*descriptorpb.FileOptions)(nil),      // 12: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil),   // 13: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 14: google.protobuf.FieldOptions
	(*descriptorpb.OneofOptions)(nil),     // 15: google.protobuf.OneofOptions
	(*descriptorpb.EnumOptions)(nil),      // 16: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 17: google.protobuf.EnumValueOptions
	(*descriptorpb.ServiceOptions)(nil),   // 18: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),    // 19: google.protobuf.MethodOptions
}
var file_protoproxypb_options_proto_depIdxs = []int32{
	8,  // 0: protoproxy.FileOptions.text_case:type_name -> protoproxy.TextCase
	8,  // 1: protoproxy.MessageOptions.text_case:type_name -> protoproxy.TextCase
	8,  // 2: protoproxy.FieldOptions.text_case:type_name -> protoproxy.TextCase
	8,  // 3: protoproxy.EnumOptions.text_case:type_name -> protoproxy.TextCase
	8,  // 4: protoproxy.EnumValueOptions.text_case:type_name -> protoproxy.TextCase
	9,  // 5: protoproxy.ServiceOptions.scheme:type_name -> protoproxy.Scheme
	10, // 6: protoproxy.MethodOptions.status_mappings:type_name -> protoproxy.StatusMapping
	11, // 7: protoproxy.MethodOptions.request_encoding:type_name -> protoproxy.Encoding
	11, // 8: protoproxy.MethodOptions.response_encoding:type_name -> protoproxy.Encoding
	12, // 9: protoproxy.file:extendee -> google.protobuf.FileOptions
	13, // 10: protoproxy.message:extendee -> google.protobuf.MessageOptions
	14, // 11: protoproxy.field:extendee -> google.protobuf.FieldOptions
	15, // 12: protoproxy.oneof:extendee -> google.protobuf.OneofOptions
	16, // 13: protoproxy.enum:extendee -> google.protobuf.EnumOptions
	17, // 14: protoproxy.enum_value:extendee -> google.protobuf.EnumValueOptions
	18, // 15: protoproxy.service:extendee -> google.protobuf.ServiceOptions
	19, // 16: protoproxy.method:extendee -> google.protobuf.MethodOptions
	0,  // 17: protoproxy.file:type_name -> protoproxy.FileOptions
	1,  // 18: protoproxy.message:type_name -> protoproxy.MessageOptions
	2,  // 19: protoproxy.field:type_name -> protoproxy.FieldOptions
	3,  // 20: protoproxy.oneof:type_name -> protoproxy.OneofOptions
	4,  // 21: protoproxy.enum:type_name -> protoproxy.EnumOptions
	5,  // 22: protoproxy.enum_value:type_name -> protoproxy.EnumValueOptions
	6,  // 23: protoproxy.service:type_name -> protoproxy.ServiceOptions
	7,  // 24: protoproxy.method:type_name -> protoproxy.MethodOptions
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	17, // [17:25] is the sub-list for extension type_name
	9,  // [9:17] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protoproxypb_options_proto_init() }
func file_protoproxypb_options_proto_init() {
	if File_protoproxypb_options_proto != nil {
		return
	}
	file_protoproxypb_common_proto_init()
	file_protoproxypb_options_proto_msgTypes[2].OneofWrappers = []any{}
	file_protoproxypb_options_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protoproxypb_options_proto_rawDesc), len(file_protoproxypb_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 8,
			NumServices:   0,
		},
		GoTypes:           file_protoproxypb_options_proto_goTypes,
		DependencyIndexes: file_protoproxypb_options_proto_depIdxs,
		MessageInfos:      file_protoproxypb_options_proto_msgTypes,
		ExtensionInfos:    file_protoproxypb_options_proto_extTypes,
	}.Build()
	File_protoproxypb_options_proto = out.File
	file_protoproxypb_options_proto_goTypes = nil
	file_protoproxypb_options_proto_depIdxs = nil
}
